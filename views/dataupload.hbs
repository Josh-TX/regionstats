{{#section 'styles'}}
{{/section}}
	{{>navigation_bar}}
<div class="container-fluid" ng-controller="uploadRegion">
	<h1>Upload Data</h1>
	<button class="btn btn-primary btn-lg" ng-click="form.submit()">Submit</button>
	<div class="row top-buffer form-group" ng-class="{'has-error': form.error.parent}">
		<div class="col-sm-3">
			<button type="button" class="btn btn-primary btn-block" ng-click="regionModal.show=true">Select Region Group</button>
		</div>
		<div class="col-sm-9">
			<input type="text" class="form-control" ng-model="regionModal.name" disabled></input>
			<span class="help-block pull-right" ng-bind="form.error.parent"></span>
		</div>
	</div>
	<div class="row top-buffer form-group" ng-class="{'has-error': form.error.type}">
		<div class="col-sm-3">
			<button type="button" class="btn btn-primary btn-block" ng-click="typeModal.show=true">Select Source</button>
		</div>
		<div class="col-sm-9">
			<input type="text" class="form-control" ng-model="typeModal.name" disabled></input>
			<span class="help-block pull-right" ng-bind="form.error.type"></span>
		</div>
	</div>
	<div class="row top-buffer form-group" ng-class="{'has-error': form.error.data}">
		<div class="col-sm-3">
			<label class="btn btn-primary btn-block">
				Select File 
				<input type="file" class="hidden" file-reader callback="csv.setFile(data)" file-name="fileName">
			</label>
		</div>
		<div class="col-sm-9">
			<input type="text" class="form-control" ng-model="fileName" disabled></input>
			<span class="help-block pull-right" ng-bind="form.error.data"></span>
		</div>
		
	</div>
	<div ng-if="csv.data">
		<table class="table table-bordered">
			<tr>
				<th>Spreadsheet Title</th>
				<td ng-repeat="header in csv.headers track by $index">{{ng "header"}}</td>
			</tr>
			<tr>
				<th>
					Category
					<div class="checkbox">
						<label>
							<input type="checkbox" ng-model="cat.sync">
							Sync All
						</label>
					</div>
				</th>
				<td ng-repeat="selection in cat.selections track by $index">
					<div dropdown="selection.name">
						<button class="btn btn-default" ng-repeat="item in cat.cats" ng-click="cat.select($parent.$index, item)">
							{{ng "item.name"}}
						</button>
					</div>
				</td>
			</tr>
			<tr>
				<th>Actual Title</th>
				<td ng-repeat="selection in title.selections track by $index">
					<div style="position: relative">
						<textarea class="form-control" rows="3" ng-disabled="title.catIDs[$index] < 0" ng-model="selection.name" 
							ng-focus="focus=true;title.changed($index)" ng-blur="focus=false"
							ng-change="title.changed($index)"></textarea>
						<div style="position: absolute" ng-if="focus">
							<div ng-repeat="sugg in title.suggestions track by $index">
								<button class="btn btn-success" ng-bind="sugg.name" ng-mousedown="title.select($index, $parent.$index)"></button>
							</div>
						</div>
					</div>
				</td>
			</tr>
			<tr>
				<th>
					Year
					<div class="checkbox">
						<label>
							<input type="checkbox" ng-model="year.sync">
							Sync All
						</label>
					</div>
				</th>
				<td ng-repeat="str in year.years track by $index">
					<input type="number" class="form-control" ng-model="year.years[$index]" ng-change="year.change($index)"></input>
				</td>
			</tr>
			<tr ng-repeat="obj in csv.data" ng-if="obj.error">
				<th colspan="{{ng 'csv.statCount + 1' }}" class="text-danger">{{ng "obj.error"}}</th>
			</tr>
			<tr ng-repeat="obj in csv.data" ng-if="!obj.error">
				<th>{{ng "obj.name"}}</th>
				<td ng-repeat="value in obj.values track by $index" ng-class="{danger: !csv.isNumber(value)}">
					{{ng "csv.formatNumber(value)"}}
				</td>
			</tr>
		</table>
		<button class="btn btn-primary btn-lg pull-right" ng-click="form.submit()">Submit</button>
	</div>
	<!-- modal -->
	<div modal="regionModal.show" str="'Select Region Group'">
		<div class="row">
			<div class="col-xs-6">
				<button class="btn btn-default pull-left right-buffer" ng-click="regionModal.back()" ng-if="regionModal.isNotWorld()">
					back
				</button>
				<h2 class="top-no-buffer"><small ng-bind="regionModal.getCurrentName()"></small></h2>
			</div>
			<div class="col-xs-6">
				<input type="text" class="form-control" placeholder="filter" ng-model="regionModal.filter" ng-change="regionModal.filterChanged()"></input>
			</div>
		</div>
		<hr>
		<button class="btn btn-primary" ng-repeat="item in regionModal.groups" ng-click="regionModal.submitGroup(item.id)">{{ng "item.type"}}s in {{ng "regionModal.getCurrentName()"}}</button>
		<button class="btn btn-default" ng-repeat="item in regionModal.regions" ng-click="regionModal.select(item.id)">{{ng "item.name"}}</button>
		<p ng-if="regionModal.isEmpty()">No sub-regions found</p>
		<p ng-if="regionModal.loading">Loading...</p>
	</div>

	<div modal="typeModal.show" str="typeModal.title">
		<button class="btn btn-default" ng-repeat="(id, name) in typeModal.types" ng-click="typeModal.select(id)">{{ng "name"}}</button>
	</div>
</div><!-- end container -->
	
{{#section 'scripts'}}

<script type="application/javascript">
	var test = {"statCount":21,"cats":[0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],"titles":["1","2","Violent Crime per Capita","2","3","Rapes","Rapes per Capita","Rapes (legacy definition)","Rapes per Capita (legacy definition)","Robberies","Robberies per Capita","Aggracated Assaults","Aggracated Assaults per Capita","Property Crimes","Property Crimes per Capita","Burglaries","Burglaries per Capita","Larcent-thefts","Larcent-thefts per Capita","Motor Vehicle Thefts","Motor Vehicle Thefts per Capita"],"years":[2014,2014,2014,2014,2014,2014,2014,2014,2014,2014,2014,2014,2014,2014,2014,2014,2014,2014,2014,2014,2014],"data":[{"id":201,"values":["",20727,427.4,276,5.7,2005,41.3,1436,29.6,4701,96.9,13745,283.4,154094,3177.6,39715,819,104238,2149.5,10141,209.1]},{"id":203,"values":[6731,26916,399.9,319,4.7,3378,50.2,2464,36.6,6249,92.8,16970,252.1,215240,3197.5,43562,647.1,154091,2289.1,17587,261.3]},{"id":204,"values":[2966,14243,480.1,165,5.6,1763,59.4,1182,39.8,2050,69.1,10265,346,99018,3338,24790,835.7,68627,2313.5,5601,188.8]},{"id":205,"values":[38802,153709,396.1,1699,4.4,11527,29.7,8398,21.6,48680,125.5,91803,236.6,947192,2441.1,202670,522.3,592670,1527.4,151852,391.3]},{"id":206,"values":[5355,16554,309.1,151,2.8,3039,56.7,2121,39.6,3039,56.7,10325,192.8,135510,2530.1,23472,438.2,99464,1857.1,12574,234.8]},{"id":207,"values":[3596,8522,236.9,86,2.4,782,21.7,571,15.9,3159,87.8,4495,125,69070,1920.4,11955,332.4,51005,1418.1,6110,169.9]},{"id":208,"values":[935614,4576,489.1,54,5.8,386,41.3,249,26.6,1269,135.6,2867,306.4,27900,2982,5768,616.5,20865,2230.1,1267,135.4]},{"id":210,"values":[19893,107521,540.5,1149,5.8,8563,43,6051,30.4,24914,125.2,72895,366.4,679446,3415.5,143220,719.9,493647,2481.5,42579,214]},{"id":211,"values":[10097,38097,377.3,580,5.7,3048,30.2,2159,21.4,12417,123,22052,218.4,331316,3281.2,76428,756.9,228034,2258.4,26854,266]},{"id":212,"values":[1419,3680,259.2,26,1.8,445,31.3,314,22.1,1107,78,2102,148.1,43297,3050,7778,547.9,31640,2228.9,3879,273.3]},{"id":213,"values":[1634,3468,212.2,32,2,609,37.3,468,28.6,204,12.5,2623,160.5,30316,1854.8,6428,393.3,22227,1359.9,1661,101.6]},{"id":214,"values":[12880,47663,370,685,5.3,4159,32.3,3081,23.9,15299,118.8,27520,213.7,267385,2075.9,50008,388.2,199926,1552.2,17451,135.5]},{"id":215,"values":[6596,24099,365.3,330,5,2186,33.1,1615,24.5,6897,104.5,14686,222.6,174776,2649.4,36893,559.3,124022,1880,13861,210.1]},{"id":216,"values":[3107,8497,273.5,60,1.9,1128,36.3,828,26.6,1045,33.6,6264,201.6,65056,2093.8,14428,464.4,46477,1495.8,4151,133.6]},{"id":217,"values":[2904,10123,348.6,91,3.1,1411,48.6,1075,37,1362,46.9,7259,250,79431,2735.2,15828,545,56697,1952.4,6906,237.8]},{"id":218,"values":[4413,9340,211.6,160,3.6,1440,32.6,883,20,3336,75.6,4404,99.8,99166,2246.9,23244,526.7,69604,1577.1,6318,143.2]},{"id":219,"values":[4649,23934,514.7,477,10.3,1375,29.6,992,21.3,5695,122.5,16387,352.4,160824,3458.8,38337,824.5,112596,2421.6,9891,212.7]},{"id":220,"values":[1330,1700,127.8,21,1.6,485,36.5,360,27.1,304,22.9,890,66.9,26421,1986.4,5030,378.2,20592,1548.2,799,60.1]},{"id":221,"values":[5976,26661,446.1,365,6.1,1619,27.1,1144,19.1,9544,159.7,15133,253.2,149859,2507.5,28012,468.7,108745,1819.6,13102,219.2]},{"id":222,"values":[6745,26399,391.4,132,2,2180,32.3,1629,24.1,6036,89.5,18051,267.6,125267,1857.1,24964,370.1,92043,1364.5,8260,122.5]},{"id":223,"values":[9909,42348,427.3,535,5.4,6273,63.3,4049,40.9,8021,80.9,27519,277.7,202547,2043.9,44184,445.9,137206,1384.5,21157,213.5]},{"id":224,"values":[5457,12505,229.1,88,1.6,2001,36.7,1452,26.6,3687,67.6,6729,123.3,125377,2297.5,20773,380.7,96237,1763.5,8367,153.3]},{"id":225,"values":[2994,8338,278.5,258,8.6,1058,35.3,764,25.5,2430,81.2,4592,153.4,87462,2921.2,24352,813.3,58591,1956.9,4519,150.9]},{"id":226,"values":[6063,26856,442.9,403,6.6,2379,39.2,1706,28.1,5592,92.2,18482,304.8,176237,2906.5,35258,581.5,124622,2055.3,16357,269.8]},{"id":227,"values":[1023,3313,323.7,37,3.6,541,52.9,430,42,203,19.8,2532,247.4,25312,2472.9,3595,351.2,19674,1922.1,2043,199.6]},{"id":228,"values":[1881,5275,280.4,54,2.9,862,45.8,620,33,1043,55.4,3316,176.2,47479,2523.5,7950,422.5,35074,1864.1,4455,236.8]},{"id":229,"values":[2839,18045,635.6,170,6,1357,47.8,995,35,5954,209.7,10564,372.1,74538,2625.4,21927,772.3,42426,1494.3,10185,358.7]},{"id":230,"values":[1326,2602,196.1,12,0.9,594,44.8,458,34.5,537,40.5,1459,110,26041,1962.7,4162,313.7,21022,1584.4,857,64.6]},{"id":231,"values":[8938,23346,261.2,349,3.9,1274,14.3,953,10.7,10498,117.5,11225,125.6,154993,1734.1,31710,354.8,111578,1248.3,11705,131]},{"id":232,"values":[2085,12459,597.4,101,4.8,1475,70.7,1071,51.4,2086,100,8797,421.8,73877,3542.3,18505,887.3,49082,2353.4,6290,301.6]},{"id":233,"values":[19746,75398,381.8,617,3.1,5433,27.5,3918,19.8,24045,121.8,45303,229.4,339282,1718.2,50781,257.2,272765,1381.4,15736,79.7]},{"id":234,"values":[9943,32767,329.5,510,5.1,2420,24.3,1740,17.5,8416,84.6,21421,215.4,285697,2873.1,79373,798.2,192694,1937.8,13630,137.1]},{"id":235,"values":[739482,1960,265.1,22,3,358,48.4,276,37.3,173,23.4,1407,190.3,15605,2110.3,2707,366.1,11384,1539.5,1514,204.7]},{"id":236,"values":[11594,33030,284.9,464,4,5042,43.5,4097,35.3,12753,110,14771,127.4,324528,2799.1,78845,680,227668,1963.6,18015,155.4]},{"id":237,"values":[3878,15744,406,175,4.5,1777,45.8,1277,32.9,3048,78.6,10744,277,115982,2990.7,29508,760.9,75891,1956.9,10583,272.9]},{"id":238,"values":[3970,9224,232.3,81,2,1458,36.7,1052,26.5,2093,52.7,5592,140.8,114305,2879,17230,434,87526,2204.6,9549,240.5]},{"id":239,"values":[12787,40164,314.1,614,4.8,3827,29.9,2787,21.8,13534,105.8,22189,173.5,247016,1931.7,45720,357.5,188256,1472.2,13040,102]},{"id":241,"values":[1055,2313,219.2,25,2.4,361,34.2,253,24,529,50.1,1398,132.5,22935,2173.6,4823,457.1,16279,1542.8,1833,173.7]},{"id":242,"values":[4832,24052,497.7,311,6.4,2068,42.8,1480,30.6,3997,82.7,17676,365.8,167217,3460.3,36721,759.9,117594,2433.4,12902,267]},{"id":243,"values":[853175,2786,326.5,20,2.3,470,55.1,413,48.4,200,23.4,2096,245.7,15902,1863.9,2818,330.3,12077,1415.5,1007,118]},{"id":244,"values":[6549,39848,608.4,371,5.7,2531,38.6,1861,28.4,7265,110.9,29681,453.2,200447,3060.6,46642,712.2,141206,2156,12599,192.4]},{"id":245,"values":[26956,109414,405.9,1184,4.4,11393,42.3,8236,30.6,31181,115.7,65656,243.6,813934,3019.4,169234,627.8,576154,2137.3,68546,254.3]},{"id":246,"values":[2942,6346,215.6,67,2.3,1454,49.4,945,32.1,1312,44.6,3513,119.4,84711,2878.5,11518,391.4,65895,2239.1,7298,248]},{"id":247,"values":[626562,622,99.3,10,1.6,110,17.6,99,15.8,70,11.2,432,68.9,9551,1524.4,2034,324.6,7273,1160.8,244,38.9]},{"id":248,"values":[8326,16340,196.2,338,4.1,2310,27.7,1432,17.2,4292,51.5,9400,112.9,160720,1930.3,23122,277.7,129933,1560.5,7665,92.1]},{"id":249,"values":[7061,20136,285.2,174,2.5,2695,38.2,2171,30.7,5640,79.9,11627,164.7,261706,3706.1,55290,783,175769,2489.1,30647,434]},{"id":250,"values":[1850,5588,302,74,4,505,27.3,285,15.4,651,35.2,4358,235.5,37648,2034.7,8973,484.9,26779,1447.3,1896,102.5]},{"id":251,"values":[5757,16714,290.3,165,2.9,1674,29.1,1168,20.3,5066,88,9809,170.4,120238,2088.3,21216,368.5,89103,1547.6,9919,172.3]},{"id":252,"values":[584153,1142,195.5,16,2.7,174,29.8,126,21.6,53,9.1,899,153.9,11477,1964.7,1689,289.1,9185,1572.4,603,103.2]}]};
	app.service("formService", function($http, event){
		var self = this;
		
		this.data = [];
		this.cats = [];
		this.titles = [];
		this.years = [];
		
		this.submit = function(){
			var filteredData = self.data.filter(function(obj){
				return !obj.error
			});
			var mappedData = filteredData.map(function(obj){
				return {
					id: obj.id,
					values: obj.values
				}
			});
			var mappedCats = self.cats.map(function(obj){
				return obj.id;
			})
			var mappedTitles = self.titles.map(function(obj){
				if (obj.id > 0)
					return obj.id
				return obj.name;
			})
			var obj = {
				statCount: self.statCount,
				cats: mappedCats,
				titles: mappedTitles,
				years: self.years,
				data: mappedData
			}
			obj = test;
			
			self.error = dataValidate(obj);
			//alert(JSON.stringify(self.error))
			if (self.error.none)
				console.log("sending post")
				$http.post('/data/upload', obj).then(successCallback, errorCallback);
		}
		event.listen("setStatCount", function(count){
			self.statCount = count;
		});
		event.listen("catSelections", function(selections){
			self.cats = selections;
		})
		event.listen("titleSelections", function(selections){
			self.titles = selections;
		})
		event.listen("yearSelections", function(selections){
			self.years = selections;
		})
		event.listen("csvData", function(data){
			self.data = data;
		})
		function successCallback(response){
			console.log("success")
			console.log(response.data);
			if (response.data.redirect){
				window.location.href = response.data.redirect;
			}
			else if (response.data.message){
				alert(response.data.message)
			}
			else {
				alert("unknown response");
			}
		}		
		function errorCallback(response){
			alert("an error occured: " + JSON.stringify(response.data))
		}
		
	});
	
	
	
	app.service("csvService", function($http, event){
		var self = this;
		var fileData;
		var type;
		var parent;
		
		this.setFile = function(response){
			fileData = Papa.parse(response).data;
			fileData[0].shift();
			self.headers = fileData[0];
			self.statCount = self.headers.length
			event.broadcast("setStatCount", self.statCount);
			fileData.shift();
			fileData = fileData.filter(function(row){
				if (row.length < 2){
					return false;
				}
				return true;
			})
			if (fileData.length < 1){
				alert("no data")
			}
			setData();
		}
		this.formatNumber = function(num){
			if (typeof num == "number"){
				return num.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
			} else {
				return "-";
			}
		}
		this.isNumber = function(num){
			return (typeof num == "number")
		}
		
		event.listen("groupSubmitted", function(groupid, regionType, regionid){
			type = regionType;
			parent = regionid;
			setData();
		});
		function setData(){
			if (typeof fileData != "undefined" && typeof parent != "undefined"){
				event.requestAsync("getRegion", regionCallback, parent);
			}
		}
		function regionCallback(regionObj){
			self.data = fileData.map(arrayToObject.bind(null, regionObj.r));
			event.broadcast("csvData", self.data);
		}
		
		
		function arrayToObject(regionList, arr){
			var obj = {};
			var region = regionList.find(function(region){
				if (region.name.toLowerCase() == arr[0].toLowerCase()){
					return region;
				}
			})
			if (region){
				obj.id = region.id;
				obj.name = region.name;
				arr.shift(); //remove region name from array, leaving just the values
				for (var i = 0; i < arr.length; i++){
					var num = parseFloat(arr[i].replace(",", ""));
					if (isNaN(num)){
						arr[i] = "";
					}
					else {
						arr[i] = num;
					}
				}
				obj.values = arr;
			}
			else {
				obj.error = 'Error finding region "' + arr[0] + '"';
			}
			return obj;
		}
	});

	app.service("catService", function(event){
		var self = this;
		var statCount = 0;
		this.sync = false;
        this.selections = [];
		this.select = function(index, obj){
			if (self.sync){
				for (var i = 0; i < statCount; i++){
					self.selections[i] = obj;
					event.broadcast("setCat", i, obj.id);
				}
			}else {
				self.selections[index] = obj;
				event.broadcast("setCat", index, obj.id);
			}
		}
		this.cats = [
			{id: 0, name: "Census"},
			{id: 1, name: "Crime"},
			{id: 2, name: "Economics"},
			{id: 3, name: "Education"},
			{id: 4, name: "Voting"}
		];
		event.listen("setStatCount", function(count){
			statCount = count;
			self.selections = [];
			for (var i = 0; i < statCount; i++){
				self.selections.push({
					name: "Not Selected",
					id: -1
				});
			}
			event.broadcast("catSelections", self.selections);
		});
	})
	app.service("titleService", function(event){
		var self = this;
		var statCount = 0;
		this.sync = false;
		this.selections = [];
        this.catIDs = [];
		this.suggestions = [];
		this.select = function(suggIndex, selectionIndex){
			var sugg = self.suggestions[suggIndex]
			var selection = self.selections[selectionIndex]
			selection.name = sugg.name;
			selection.id = sugg.id;
		}
		this.changed = function(index){
			var str = self.selections[index].name;
			self.suggestions = [];
			if (str.length < 2){
				return;
			}
			for (var i = 0; i < statCount; i++){
				if (i == index || self.catIDs[i] != self.catIDs[index]){
					continue;
				}
				if (self.selections[i].name.contains(str)){
					self.suggestions.push({
						name: self.selections[i].name,
						id: -1
					});
				}
			}		
			for (var i = 0; i < titles.length; i++){
				if (titles[i].name.contains(str)){
					self.suggestions.push(titles[i]);
				}
			}		
		}
		
		event.listen("setCat", function(index, id){
			self.selections[index].name = "";
			self.selections[index].id = -1;
			self.catIDs[index] = id;
		})
		event.listen("setStatCount", function(count){
			statCount = count;
			self.selections = [];
			self.catIDs = [];
			for (var i = 0; i < statCount; i++){
				self.selections.push({
					name: "first select a category",
					id: -1
				});
				self.catIDs.push(-1);
			}
			event.broadcast("titleSelections", self.selections);
		});
		var titles = [
			{id: "1", name: "Population"},
			{id: "2", name: "Murders"},
			{id: "3", name: "Murders per Capita"}
		];
	})
	
	app.service("yearService", function(event){
		var self = this;
		var statCount = 0;
		this.sync = false;
        this.years = [];
		this.change = function(index){
			var str = self.years[index];
			if (str.length > 4)
				str = str.substring(0, 4);
			if (self.sync){
				for (var i = 0; i < statCount; i++){
					self.years[i] = str;
				}
			}
		}
		event.listen("setStatCount", function(count){
			statCount = count;
			self.years = [];
			for (var i = 0; i < statCount; i++){
				self.years.push("");
			}
			event.broadcast("yearSelections", self.years);
		});
	})
	
	app.controller("uploadRegion", function($scope, formService, regionService, csvService, catService, titleService, yearService){
		$scope.cat = catService;
		$scope.csv = csvService;
		$scope.form = formService;
		$scope.regionModal = regionService;
		$scope.title = titleService;
		$scope.year = yearService;
	});
</script>
<script src="/content/services/region.js"></script>
<script src="/content/directives/filereader.js"></script>
<script src="/content/directives/modal.js"></script>
<script src="/content/directives/dropdown.js"></script>
<script src="/content/js/titlecase.js"></script>
<script src="/content/validators/dataupload.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/PapaParse/4.1.2/papaparse.js"></script>

{{/section}}