{{#section 'styles'}}
{{/section}}
	{{>navigation_bar}}
	<div class="container-fluid" ng-controller="uploadRegion" ng-submit="form.submit()">
		<h1>Upload Data</h1>
			<div class="row top-buffer form-group" ng-class="{'has-error': form.error.parent}">
				<div class="col-sm-3">
					<button type="button" class="btn btn-primary btn-block" ng-click="regionModal.show=true">Select Region Group</button>
				</div>
				<div class="col-sm-9">
					<input type="text" class="form-control" ng-model="regionModal.name" disabled></input>
					<span class="help-block pull-right" ng-bind="form.error.parent"></span>
				</div>
			</div>
			<div class="row top-buffer form-group" ng-class="{'has-error': form.error.type}">
				<div class="col-sm-3">
					<button type="button" class="btn btn-primary btn-block" ng-click="typeModal.show=true">Select Source</button>
				</div>
				<div class="col-sm-9">
					<input type="text" class="form-control" ng-model="typeModal.name" disabled></input>
					<span class="help-block pull-right" ng-bind="form.error.type"></span>
				</div>
			</div>
			<div class="row top-buffer form-group" ng-class="{'has-error': form.error.data}">
				<div class="col-sm-3">
					<label class="btn btn-primary btn-block">
						Select File 
						<input type="file" class="hidden" file-reader callback="csv.setData(data)" file-name="fileName">
					</label>
				</div>
				<div class="col-sm-9">
					<input type="text" class="form-control" ng-model="fileName" disabled></input>
					<span class="help-block pull-right" ng-bind="form.error.data"></span>
				</div>
				
			</div>
			<div ng-if="csv.data">
				inside if
				<table class="table table-bordered">
					<tr>
						<th>Spreadsheet Title</th>
						<td ng-repeat="header in csv.headers track by $index">{{ng "header"}}</td>
					</tr>
					<tr>
						<th>
							Category
							<div class="checkbox">
								<label>
									<input type="checkbox" ng-model="cat.sync">
									Sync All
								</label>
							</div>
						</th>
						<td ng-repeat="selection in cat.selections track by $index">
							<div dropdown="selection.name">
								<button class="btn btn-default" ng-repeat="item in cat.cats" ng-click="cat.select($parent.$index, item)">
									{{ng "item.name"}}
								</button>
							</div>
						</td>
					</tr>
					<tr>
						<th>Actual Title</th>
						<td ng-repeat="selection in title.selections track by $index">
							<div style="position: relative">
								<textarea class="form-control" rows="3" ng-disabled="title.catIDs[$index] < 0" ng-model="selection.name" 
									ng-focus="focus=true;title.changed($index)" ng-blur="focus=false"
									ng-change="title.changed($index)"></textarea>
								<div style="position: absolute" ng-if="focus">
									<div ng-repeat="sugg in title.suggestions">
										<button class="btn btn-success" ng-bind="sugg.name"></button>
									</div>
								</div>
							</div>
						</td>
					</tr>
					<tr>
							<th>
							Year
							<div class="checkbox">
								<label>
									<input type="checkbox" ng-model="year.sync">
									Sync All
								</label>
							</div>
						</th>
						<td ng-repeat="str in year.years track by $index">
							<input type="number" class="form-control" ng-model="year.years[$index]" ng-change="year.change($index)"></input>
						</td>
					</tr>
					<tr ng-repeat="obj in csv.data">
						<th>{{ng "obj.name"}}</th>
						<td ng-repeat="value in obj.values track by $index">{{ng "value"}}</th>
					</tr>
				</table>
				<input class="btn btn-primary btn-lg pull-right" type="submit" value="submit"></input>
			</div>
		</div>
		<!-- modal -->
		<div modal="regionModal.show" str="regionModal.title" callback="regionModal.submitRegion()">
			<div class="row">
				<div class="col-xs-6">
					<button class="btn btn-default pull-left right-buffer" ng-click="regionModal.back()" ng-if="regionModal.isNotWorld()">back</button>
					<h2 class="top-no-buffer"><small ng-bind="regionModal.currentRegion.name"></small></h2>
				</div>
				<div class="col-xs-6">
					<input type="text" class="form-control" placeholder="filter" ng-model="regionModal.filter" ng-change="regionModal.filterChanged()"></input>
				</div>
			</div>
			<hr>
			<button class="btn btn-default" ng-repeat="data in regionModal.regions" ng-click="regionModal.select(data.id)">{{ng "data.name"}}</button>
			<p ng-if="regionModal.isEmpty()">No sub-regions found</p>
			<p ng-if="regionModal.loading">Loading...</p>
		</div>

		<div modal="typeModal.show" str="typeModal.title">
			<button class="btn btn-default" ng-repeat="(id, name) in typeModal.types" ng-click="typeModal.select(id)">{{ng "name"}}</button>
		</div>
	</div><!-- end container -->
	
{{#section 'scripts'}}

<script type="application/javascript">
	app.service("formService", function($http){
		var self = this;
		this.data = [];
		
		this.submit = function(){
			self.data.map(titleCase);
			self.error = uploadRegionValidate(self);
			if (self.error.none)
				
				$http.post('/region/upload', this).then(successCallback, errorCallback);
		}
		this.setData = function(){
			//idk
		}
		
		function successCallback(response){
			if (response.data.redirect){
				window.location.href = response.data.redirect;
			}
			else if (response.data.message){
				alert(response.data.message)
			}
			else {
				alert("unknown response");
			}
		}		
		function errorCallback(response){
			alert("an error occured: " + JSON.stringify(response.data))
		}
		
	});
	
	
	
	app.service("csvService", function($http, event){
		var self = this;
		var tempData;
		this.setData = function(response){
			tempData = Papa.parse(response).data;
			tempData[0].shift();
			self.headers = tempData[0];
			self.width = self.headers.length
			event.broadcast("setStatCount", self.width);
			self.titles = [];
			for (var i = 0; i < self.width; i++){
				self.titles.push("");
			}
			tempData.shift();
			tempData = tempData.filter(function(row){
				if (row.length < 2){
					return false;
				}
				return true;
			})
			if (tempData.length < 1){
				alert("no data")
			}
			event.request("getRegion", regionCallback, 193);
			//regionService.getRegionCallback(193, regionCallback);//hardcoded atm
		}
		function regionCallback(regionObj){
			alert(JSON.stringify(regionObj))
			self.data = tempData.map(arrayToObject.bind(null, regionObj.r));
		}
		function arrayToObject(regionList, arr){
			var obj = {};
			var region = regionList.find(function(region){
				if (region.name.toLowerCase() == arr[0].toLowerCase()){
					return region;
				}
			})
			if (region){
				obj.id = region.id;
				obj.name = region.name;
				arr.shift();
				obj.values = arr;
			}
			else {
				obj.error = "Error finding region " + arr[0];
			}
			return obj;
		}
	});

	app.service("catService", function(event){
		var self = this;
		var statCount = 0;
		this.sync = false;
        this.selections = [];
		this.select = function(index, obj){
			if (self.sync){
				for (var i = 0; i < statCount; i++){
					self.selections[i] = obj;
					event.broadcast("setCat", i, obj.id);
				}
			}else {
				self.selections[index] = obj;
				event.broadcast("setCat", index, obj.id);
			}
		}
		this.cats = [
			{id: 0, name: "Census"},
			{id: 1, name: "Crime"},
			{id: 2, name: "Economics"},
			{id: 3, name: "Education"},
			{id: 4, name: "Voting"}
		];
		event.listen("setStatCount", function(count){
			statCount = count;
			self.selections = [];
			for (var i = 0; i < statCount; i++){
				self.selections.push({
					name: "Not Selected",
					id: -1
				});
			}
		});
	})
	app.service("titleService", function(event){
		var self = this;
		var statCount = 0;
		this.sync = false;
		this.selections = [];
        this.catIDs = [];
		this.suggestions = [];
		this.select = function(index, obj){
			alert("not supported")
		}
		self.changed = function(index){
			var str = self.selections[index].name;
			self.suggestions = [];
			if (str.length < 2){
				console.log("returning")
				return;
			}
			console.log("not returning")
			for (var i = 0; i < titles.length; i++){
				if (titles[i].name.contains(str)){
					console.log("pushed")
					self.suggestions.push(titles[i]);
				}
			}		
		}
		
		event.listen("setCat", function(index, id){
			self.selections[index].name = "";
			self.catIDs[index] = id;
		})
		event.listen("setStatCount", function(count){
			statCount = count;
			self.selections = [];
			self.catIDs = [];
			for (var i = 0; i < statCount; i++){
				self.selections.push({
					name: "first select a category",
					id: -1
				});
				self.catIDs.push(-1);
			}
		});
		var titles = [
			{id: "1", name: "Population"},
			{id: "2", name: "Murders"},
			{id: "3", name: "Murders per Capita"}
		];
	})
	
	app.service("yearService", function(event){
		var self = this;
		var statCount = 0;
		this.sync = false;
        this.years = [];
		this.change = function(index){
			var str = self.years[index];
			if (str.length > 4)
				str = str.substring(0, 4);
			if (self.sync){
				for (var i = 0; i < statCount; i++){
					self.years[i] = str;
				}
			}
		}
		event.listen("setStatCount", function(count){
			statCount = count;
			self.years = [];
			for (var i = 0; i < statCount; i++){
				self.years.push("");
			}
		});
	})
	
	app.controller("uploadRegion", function($scope, formService, regionService, csvService, catService, titleService, yearService){
		$scope.cat = catService;
		$scope.csv = csvService;
		$scope.form = formService;
		$scope.regionModal = regionService;
		$scope.title = titleService;
		$scope.year = yearService;
	});
</script>
<script src="/content/services/regionservice.js"></script>
<script src="/content/directives/filereader.js"></script>
<script src="/content/directives/modal.js"></script>
<script src="/content/directives/dropdown.js"></script>
<script src="/content/js/titlecase.js"></script>
<script src="/content/validators/regionupload.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/PapaParse/4.1.2/papaparse.js"></script>

{{/section}}