{{#section 'styles'}}
{{/section}}
	{{>navigation_bar}}
	<div class="container" ng-controller="uploadRegion" ng-submit="form.submit()">
		<h1>Upload Region</h1>
		<form enctype="multipart/form-data" accept-charset="UTF-8">
			<div class="row top-buffer form-group" ng-class="{'has-error': form.error.parent}">
				<div class="col-sm-3">
					<button type="button" class="btn btn-primary btn-block" ng-click="regionModal.show=true">Select Parent Region</button>
				</div>
				<div class="col-sm-9">
					<input type="text" class="form-control" ng-model="regionModal.name" disabled></input>
					<span class="help-block pull-right" ng-bind="form.error.parent"></span>
				</div>
			</div>
			<div class="row top-buffer form-group" ng-class="{'has-error': form.error.type}">
				<div class="col-sm-3">
					<button type="button" class="btn btn-primary btn-block" ng-click="typeModal.show=true">Select Region Type</button>
				</div>
				<div class="col-sm-9">
					<input type="text" class="form-control" ng-model="typeModal.name" disabled></input>
					<span class="help-block pull-right" ng-bind="form.error.type"></span>
				</div>
			</div>
			<input class="btn btn-primary btn-lg pull-right" type="submit" value="submit"></input>
		</form>
		<div ng-if="form.data.length > 0">
			<h2>preview</h2>
			<table>
				<tr>
					<th ng-bind="typeModal.name"></th>
				</tr>
				<tr ng-repeat="region in form.data track by $index">
					<td ng-bind="region"></td>
				</tr>
			</table>
		</div>
		
		<!-- modal -->
		<div modal="regionModal.show" str="regionModal.title" callback="regionModal.submitRegion()">
			<div class="row">
				<div class="col-xs-6">
					<button class="btn btn-default pull-left right-buffer" ng-click="regionModal.back()" ng-if="regionModal.isNotWorld()">back</button>
					<h2 class="top-no-buffer"><small ng-bind="regionModal.currentRegion.name"></small></h2>
				</div>
				<div class="col-xs-6">
					<input type="text" class="form-control" placeholder="filter" ng-model="regionModal.filter" ng-change="regionModal.filterChanged()"></input>
				</div>
			</div>
			<hr>
			<button class="btn btn-default" ng-repeat="data in regionModal.regions" ng-click="regionModal.select(data.id)">{{ng "data.name"}}</button>
			<p ng-if="regionModal.isEmpty()">No sub-regions found</p>
			<p ng-if="regionModal.loading">Loading...</p>
		</div>

		<div modal="typeModal.show" str="typeModal.title">
			<button class="btn btn-default" ng-repeat="data in typeModal.types" ng-click="typeModal.select(data.id)">{{ng "data.name"}}</button>
		</div>
	</div><!-- end container -->
	
{{#section 'scripts'}}

<script type="application/javascript">
    var app = angular.module("myApp", []);
	
	app.service("formService", function($http){
		var self = this;
		this.data = [];
		
		this.submit = function(){
			self.data.map(titleCase);
			self.error = uploadRegionValidate(self);
			if (self.error.none)
				$http.post('/region/upload', self).then(successCallback, errorCallback);
		}
		this.setData = function(data){
			self.data = data.split(/[\n\r]+/);
		}
		function successCallback(response){
			if (response.data.redirect){
				window.location.href = response.data.redirect;
			}
			else if (response.data.message){
				alert(response.data.message)
			}
			else {
				alert("unknown response");
			}
		}
		
		
		function errorCallback(response){
			alert("an error occured: " + JSON.stringify(response.data))
		}
	});
	
	
	app.service("regionService", function($http, formService){
		var self = this;
		var list = {};
		
		this.filter = "";
		this.currentRegion = {id: 0, name: "World"};
		this.show = false;
		this.title = "Select Parent Region";
		this.name = "not selected";
		this.regions = [];
		this.loading = true;
		getRegion(0);
		
		this.back = function() {
			var id = self.currentRegion.id;;
			getRegion(list[id].parent);
		}
		this.select = function(id){
			getRegion(id);
		}
		this.submitRegion = function() {
			formService.parent = self.currentRegion.id;
			self.name = self.currentRegion.name;
		}		
		this.isEmpty = function(){
			return list[self.currentRegion.id] && list[self.currentRegion.id].r.length == 0;
		}
		this.isNotWorld = function(){
			return self.currentRegion.id != 0;
		}
		this.filterChanged = function(){
			if (list[self.currentRegion.id]){
				self.regions = list[self.currentRegion.id].r.filter(passesFilter);
			}
		}
		
		function getRegion(targetid)
		{
			var oldid = self.currentRegion.id
			self.currentRegion.id = targetid;
			self.filter = "";
			if (!list[targetid]){	
				$http.post('/ajax/region', {id: self.currentRegion.id}).then(successRegionCallback, errorRegionCallback);
				if (list[oldid]){
					self.currentRegion.name = list[oldid].r.find( function(obj){return obj.id == targetid} ).name;
				}
				self.loading = true;
				self.regions = [];
			}
			else {
				self.currentRegion.name = list[targetid].name;
				self.regions = list[targetid].r;
			}
		}
		function successRegionCallback(response)
		{
			console.log(response.data);
			var id = self.currentRegion.id;
			list[id] = response.data;
			self.currentRegion.name = list[id].name;
			self.regions = list[id].r;
			self.loading = false;
		}
		function errorRegionCallback(response)
		{
			console.log(response);
		}
		function passesFilter(obj){
			var filters = self.filter.toLowerCase().split(/[ ,_\-]+/);
			var tokens = obj.name.toLowerCase().split(/[ ,\-]+/);
			for (var i = 0; i < filters.length; i++) {
				var match = false;
				for (var j = 0; j < tokens.length; j++) {
					if (tokens[j].startsWith(filters[i])) {
						match = true;
						break;
					}
				}
				if (match == false) {
					return false;
				}
			}
			return true;
		}

		return self;
	
	})

	app.service("typeService", function($http, formService) {
		var self = this;

		this.types = {};

		function getTypes() {
			if (!self.types[0])
				$http.post('/ajax/regionType').then(successRegionCallback, errorRegionCallback);
		}

		this.show = false;
		this.title = "Select Region Type";
		this.name = "not selected";

		this.select = function(id) {
			self.name = self.types[id-1].name;
			formService.type = id;
			self.show = false;
		}

		function successRegionCallback(response)
		{
			//console.log(response.data);
			self.types = response.data;
		}

		function errorRegionCallback(response)
		{
			console.log(response);
		}

		getTypes();
		return self;
	})

	app.controller("uploadRegion", function($http, $scope, formService, regionService, typeService){	
		$scope.form = formService;
		$scope.regionModal = regionService;
		$scope.typeModal = typeService;
	});
</script>
<script src="/content/js/filereader.js"></script>
<script src="/content/js/modal.js"></script>
<script src="/content/js/titlecase.js"></script>
<script src="/content/validators/regionupload.js"></script>

{{/section}}