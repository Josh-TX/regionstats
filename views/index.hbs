{{>navigation_bar}}

{{#if session.userid }}
	<h1>Welcome, {{ session.username }}</h1>
{{/if}}

<br>
<p style="padding-left: 10px;">{{makeLink " View users in mysql server" "mysql"}}</p>
<!--<p style="padding-left: 10px;">{{makeLink " View users in mongodb server" "mongo"}}</p>-->

<div ng-controller="rootController">
	<div ng-controller="sidebarController">
		<button class="btn btn-primary" ng-click="showSidebar=!showSidebar"> show Sidebar</button>
		<div sidebar="showSidebar">
			<sidebar-header>
				<div class="row">
					<div class="col-xs-6">
						<button class="btn btn-default" ng-click="stateService.back()" ng-if="stateService.state">back</button>
					</div>
					<div class="col-xs-6">
						<input type="text" class="form-control" placeholder="filter" ng-model="filter" ng-change="filterChanged()"></input>
					</div>				
				</div>
				<div class="row">
					<div class="col-md-12">
						<h2>state = {{ng 'stateService.state'}}</h2>
					</div>
				</div>
			</sidebar-header>
			<sidebar-body>
				<div ng-switch="stateService.state">
					<div ng-switch-when="">
						<div sidebar-section="'Browse by...'" list="stateService.rootList", callback="stateService.setState(obj.newState)"></div>
					</div>
					
					<div ng-switch-when="r">
						<div sidebar-section="''" list="[{name: 'view data'}]" callback="stateService.setState('rt')"></div>
						
						<div sidebar-section="'Region Groups'" list="regionService.groups", callback="stateService.setState('gt')" get-name="regionService.getGroupStr(obj)"></div>
						<!-- child regions -->
						<div sidebar-section="regionService.getCurrentName()" list="regionService.regions", 
						callback="stateService.setID(obj.id)"></div>
					</div>
					<div ng-switch-when="rt">
						<div ng-repeat="(key, value) in titleService.titlesByRegion">
							<div sidebar-section="key" list="value", callback="stateService.setState('rtc')"></div>
						</div>
					</div>
					<div ng-switch-when="t">
						<div sidebar-section="category" list="catService.cats", callback="stateService.pushState('t', obj.id)"></div>
					</div>
					<div ng-switch-default>
						<h2>ng-switch has no handler for state {{ng 'stateService.state'}}</h2>
					</div>
				</div>
			</sidebar-body>
		</div>
	</div>
</div>
{{#section 'scripts'}}

<script>
app.service("catService", function(){
	this.cats = [
		{id: 1, name: "Census"},
		{id: 2, name: "Crime"},
		{id: 3, name: "Economics"},
		{id: 4, name: "Education"},
		{id: 5, name: "Voting"}
	];
})


app.service("titleService", function($http){
	var self = this;
	
	var titlesByRegion = {}; //
	self.titlesByRegion = {};
	self.allTitles = {};
	
	this.loading = false;
	this.setTitlesByRegion = function(region_id){
		if (!titlesByRegion[region_id]){
			self.loading = true;
			$http.post("/api/titles", {region_id: region_id}).then(function(response){
				self.loading = false;
				var obj = {};
				titlesByRegion[region_id] = obj;
				response.data.forEach(function(titleObj, ind){
					if (!obj[titleObj.category_id]){
						obj[titleObj.category_id] = [];
					}
					obj[titleObj.category_id].push(titleObj);
				});	
				self.titlesByRegion = obj;
			})
		} else {
			self.titlesByRegion = titlesByRegion[region_id]
		}
	}
	this.setAllTitles = function(){
		if (Object.keys(self.allTitles).length == 0){
			self.loading = true;
			$http.post("/api/titles", {}).then(function(response){
				self.loading = false;
				response.data.forEach(function(titleObj, ind){
					if (!self.allTitles[titleObj.category_id]){
						self.allTitles[titleObj.category_id] = [];
					}
					self.allTitles[titleObj.category_id].push(titleObj);
				});	
			})
		}
	}
	
})

app.service("stateService", function($timeout, event, regionService, catService, titleService) {
	var self = this;
	event.handle("digestCycle", function(){
		$timeout(function(){
			
		});
	});
	//var stack = [];
	var region_id = 0;
	var title_id;
	var stat_id
	
	this.state = "";
	this.rootList = [
		{
			newState: "r",
			name: "Browse by Region"
		},
		{
			newState: "c",
			name: "Browse by Statistic"
		}
	]
	this.back = function(){
		switch (self.state){
			case "r":
				var id = regionService.back();
				if (id < 0){
					self.state = "";
				}else {
					region_id = id;
				}
				break;
			case "rt":
				self.state = "r";
				break;
			case "gt":
				self.state = "r";
				break;
			case "rtc": 
				self.state = "rt";
				break;
			case "gtc":
				self.state = "gt";
				break;
		
			case "t":
				self.state = "";
				break;
			case "tc":
				self.state = "t";
				break;
			case "tcr":
				self.state = "tc";
				break;
			default:
				alert("switch has no case for state " + self.state)
		}
		processState();
	}
	this.setState = function(newState, id){
		if (typeof id == "number")
			self.setID(id);
		self.state = newState;
		processState(id);
	}
	this.setID = function(id){
		switch (self.state){
			case "r":
				region_id = id;
				break;
			case "rt":
				break;
			case "gt":
				break;
			case "rtc": 
				break;
			case "gtc":
				break;	
			case "t":
				break;
			case "tc":
				break;
			case "tcr":
				break;
			default:
				alert("switch has no case for state " + self.state)
		}
		processState();
	}
	
	var processState = function(){
		switch (self.state){
			case "":
				break;
			case "r":
				regionService.select(region_id);
				setHash("#r" + region_id);
				break;
			case "rt":
				titleService.setTitlesByRegion(region_id);
				setHash("#r" + region_id + "t");
				break;	
			default:
				console.log("processState has no case for state " + self.state)
		}
	}
	function setHash(str){
		if (str.length == 0){
			history.pushState("", document.title, window.location.pathname + window.location.search);
		}
		window.history.pushState("", document.title, str);
	}
	function parseHash(){
		var state = "";
		var hash = location.hash;
		for (var i = 1; i < hash.length; i++){
			var c = hash.charAt(i++);
			state += c;
			var match = /^(\d+)/.exec(hash.substring(i));
			if (match){
				i += match.length;
				if (c == "r"){
					region_id = parseFloat(match[1]);
				}
			} else {
				break;
			}
		}
		self.state = state;
	}
	window.onhashchange = function(){
		parseHash();
		//processState();
		$timeout(processState)
	};
	parseHash();
	processState();
})


app.controller("rootController", function($scope, regionService, typeService) {
//typeservice needs to be used be instantiated, but atm is unused by a controller

})

app.controller("sidebarController", function($scope, stateService, regionService, catService, titleService) {
	$scope.stateService = stateService;
	$scope.catService = catService
	$scope.regionService = regionService;
	$scope.titleService = titleService;
	
})

</script>
<script src="/content/services/region.js"></script>
<script src="/content/services/type.js"></script>
<script src="/content/directives/sidebar.js"></script>
<script src="/content/directives/sidebarsection.js"></script>
{{/section}}